name: Docker CD

on:
  push:
    branches:
      - main
    paths:
      - 'main_app/**'
      - 'socket_app/**'
      - 'push_app/**'
      - 'admin_app/**'
      - '.github/workflows/*'

jobs:
  deploy:
    name: Build and Push ${{ matrix.service }} image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [main_app, socket_app, push_app, admin_app]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get the version
      id: vars
      run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Login to Docker Hub using Token
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/docker-layers
        key: ${{ runner.os }}-docker-${{ matrix.service }}-${{ steps.vars.outputs.version }}
        restore-keys: |
          ${{ runner.os }}-docker-${{ matrix.service }}-

    - name: Build and push ${{ matrix.service }} Docker image
      run: |
        docker build --cache-from=docker.io/kirillka564/swipe_api:${{ matrix.service }}-${{ steps.vars.outputs.version }} -t kirillka564/swipe_api:${{ matrix.service }}-${{ steps.vars.outputs.version }} ./${{ matrix.service }}
        
        # Сохраняем только конкретные слои образа
        docker save kirillka564/swipe_api:${{ matrix.service }}-${{ steps.vars.outputs.version }} > /tmp/docker-layers.tar
        
        docker push kirillka564/swipe_api:${{ matrix.service }}-${{ steps.vars.outputs.version }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/docker-layers.tar
        key: ${{ runner.os }}-docker-${{ matrix.service }}-${{ steps.vars.outputs.version }}
        restore-keys: |
          ${{ runner.os }}-docker-${{ matrix.service }}-

  deploy_to_server:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Add server to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server using SSH action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        debug: true
        script: |
          cd swipe_api
          docker-compose pull
          docker-compose up -d
